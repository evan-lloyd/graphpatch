[tox]
isolated_build = true
env_list = 
  lint
  format
  typecheck
  test-py{38,39,310,311}-torch{20,21,22,23}-extra{none,all}
  test-notebooks-py{38,39,310,311}-torch{20,21,22,23}
labels =
  lock = lock-torch{20,21,22,23}
  update = update-torch{20,21,22,23}
  test = test-py{38,39,310,311}-torch{20,21,22,23}-extra{none,all}
  test-notebooks = test-notebooks-py{38,39,310,311}-torch{20,21,22,23}
  test-long = test-long-py{38,39,310,311}-torch{20,21,22,23}-extraall
  test-20 = test-py310-torch20-extraall
  test-21 = test-py310-torch21-extraall
  test-22 = test-py310-torch22-extraall
  test-23 = test-py310-torch23-extraall
  test-one = test-py310-torch23-extraall
  test-long-one = test-long-py310-torch23-extraall
  test-notebooks-one = test-notebooks-py310-torch23
  test-all = test-py{38,39,310,311}-torch{20,21,22,23}-extra{none,all}, test-notebooks-py{38,39,310,311}-torch{20,21,22,23}
  debug-20 = debug-py310-torch20-extraall
  debug-21 = debug-py310-torch21-extraall
  debug-22 = debug-py310-torch22-extraall
  debug-23 = debug-py310-torch23-extraall

[testenv]
skip_install = true
allowlist_externals =
  poetry
  python
  cp
pass_env =
  RUN_LONG_TESTS
  MODEL_DIR

[common]
set_up_lockfiles =
  torch20: cp {tox_root}/.poetry-lockfiles/lock-torch20.lock ./poetry.lock
  torch20: cp {tox_root}/.poetry-lockfiles/lock-torch20.toml ./pyproject.toml
  torch21: cp {tox_root}/.poetry-lockfiles/lock-torch21.lock ./poetry.lock
  torch21: cp {tox_root}/.poetry-lockfiles/lock-torch21.toml ./pyproject.toml
  torch22: cp {tox_root}/.poetry-lockfiles/lock-torch22.lock ./poetry.lock
  torch22: cp {tox_root}/.poetry-lockfiles/lock-torch22.toml ./pyproject.toml
  torch23: cp {tox_root}/.poetry-lockfiles/lock-torch23.lock ./poetry.lock
  torch23: cp {tox_root}/.poetry-lockfiles/lock-torch23.toml ./pyproject.toml
poetry_install = 
  extranone: poetry install --sync --only {env:GRAPHPATCH_DEP_GROUPS} --no-root
  extraall: poetry install --sync --all-extras --only {env:GRAPHPATCH_DEP_GROUPS} --no-root

[lock]
init =
  python {tox_root}/scripts/build_pyproject.py {tox_root} {envname} ./pyproject.toml
  python {tox_root}/scripts/copy_lockfile.py {tox_root} {envname} in
finalize =
  cp pyproject.toml {tox_root}/.poetry-lockfiles/{envname}.toml
  python {tox_root}/scripts/copy_lockfile.py {tox_root} {envname} out

[testenv:lock-torch{20,21,22,23}]
change_dir = {envdir}
commands =
  {[lock]init}
  poetry lock --no-update
  {[lock]finalize}
runner = ignore_env_name_mismatch

[testenv:update-torch{20,21,22,23}]
change_dir = {envdir}
env_dir_replace =
  (.*)update
  \1lock
commands =
  {[lock]init}
  poetry update --lock {posargs}
  {[lock]finalize}
runner = ignore_env_name_mismatch

[testenv:lint]
commands_pre = poetry install --sync --only testenv-lint
commands =
  flake8 graphpatch demos tests

[testenv:format]
commands_pre = poetry install --sync --only testenv-format
commands =
  isort graphpatch demos tests
  black --config .black graphpatch demos tests

[testenv:typecheck]
commands_pre = poetry install --all-extras --sync --only main,torch,testenv-typecheck
commands =
  mypy graphpatch demos

[testenv:test-py{38,39,310,311}-torch{20,21,22,23}-extra{none,all}]
change_dir = {env_tmp_dir}
set_env =
  GRAPHPATCH_DEP_GROUPS = main,torch,testenv-test
commands_pre =
  {[common]set_up_lockfiles}
  {[common]poetry_install}
commands =
  python {tox_root}/scripts/in_dir.py {tox_root} pytest -ra -s -n 4 {posargs}

[testenv:test-long-py{38,39,310,311}-torch{20,21,22,23}-extra{all}]
change_dir = {env_tmp_dir}
set_env =
  GRAPHPATCH_DEP_GROUPS = main,torch,testenv-test
  RUN_LONG_TESTS = 1
commands_pre =
  {[common]set_up_lockfiles}
  {[common]poetry_install}
commands =
  python {tox_root}/scripts/in_dir.py {tox_root} pytest tests/test_real_models.py -ra -s -k \"not extract\" {posargs}

[testenv:debug-py{38,39,310,311}-torch{20,21,22,23}-extra{none,all}]
change_dir = {env_tmp_dir}
set_env =
  GRAPHPATCH_DEP_GROUPS = main,torch,testenv-test,testenv-debug
commands_pre =
  {[common]set_up_lockfiles}
  {[common]poetry_install}
commands =
  python {tox_root}/scripts/in_dir.py {tox_root} pytest -ra -s {posargs}

[testenv:test-notebooks-py{38,39,310,311}-torch{20,21,22,23}]
change_dir = {env_tmp_dir}
commands_pre =
  {[common]set_up_lockfiles}
  poetry install --all-extras --sync --only main,torch,testenv-test,testenv-test-notebooks --no-root
  python {tox_root}/scripts/in_dir.py {tox_root} poetry --all-extras install --only-root
commands =
  python {tox_root}/scripts/in_dir.py {tox_root} pytest --nbmake demos -ra {posargs}

[testenv:test-coverage]
commands_pre = poetry install --all-extras --sync --only main,torch,testenv-test,testenv-test-coverage
commands =
  pytest --cov=graphpatch --cov-report=xml:coverage.xml {posargs}

[testenv:docs]
commands_pre = poetry install --all-extras --sync --only dev,torch,testenv-docs
commands =
  sphinx-autobuild -a docs docs/_build/html -E --watch graphpatch {posargs}
