[tox]
isolated_build = true
env_list = 
  lint
  format
  typecheck
  test-py{38,39,310,311}-torch{20,21,22}-extra{none,transformers}
  test-notebooks-py{38,39,310,311}-torch{20,21,22}
labels =
  lock = lock-torch{20,21,22}
  test = test-py{38,39,310,311}-torch{20,21,22}-extra{none,transformers}
  test-20 = test-py310-torch20-extratransformers
  test-21 = test-py310-torch21-extratransformers
  test-22 = test-py310-torch22-extratransformers
  test-one = test-py310-torch22-extratransformers
  test-all = test-py{38,39,310,311}-torch{20,21,22}-extra{none,transformers}, test-notebooks-py{38,39,310,311}-torch{20,21,22}

[testenv]
skip_install = true
allowlist_externals =
  poetry
  python
  cp
pass_env =
  RUN_LONG_TESTS
  MODEL_DIR

[testenv:lock-torch{20,21,22}]
change_dir = {env_tmp_dir}
commands_pre =
  python {tox_root}/scripts/build_pyproject.py {tox_root} {envname} ./pyproject.toml
  cp {tox_root}/poetry.lock .
commands =
  poetry lock --no-update
  cp poetry.lock {tox_root}/.poetry-lockfiles/{envname}.lock
  cp pyproject.toml {tox_root}/.poetry-lockfiles/{envname}.toml

[testenv:lint]
commands_pre = poetry install --sync --only testenv-lint
commands =
  flake8 graphpatch demos tests

[testenv:format]
commands_pre = poetry install --sync --only testenv-format
commands =
  isort graphpatch demos tests
  black --config .black graphpatch demos tests

[testenv:typecheck]
commands_pre = poetry install --all-extras --sync --only main,torch,testenv-typecheck
commands =
  mypy graphpatch demos

[testenv:test-py{38,39,310,311}-torch{20,21,22}-extra{none,transformers}]
change_dir = {env_tmp_dir}
commands_pre =
  torch20: cp {tox_root}/.poetry-lockfiles/lock-torch20.lock ./poetry.lock
  torch20: cp {tox_root}/.poetry-lockfiles/lock-torch20.toml ./pyproject.toml
  torch21: cp {tox_root}/.poetry-lockfiles/lock-torch21.lock ./poetry.lock
  torch21: cp {tox_root}/.poetry-lockfiles/lock-torch21.toml ./pyproject.toml
  torch22: cp {tox_root}/.poetry-lockfiles/lock-torch22.lock ./poetry.lock
  torch22: cp {tox_root}/.poetry-lockfiles/lock-torch22.toml ./pyproject.toml
  extranone: poetry install --sync --only main,torch,testenv-test --no-root
  extratransformers: poetry install --sync -E transformers --only main,torch,testenv-test --no-root
commands =
  python {tox_root}/scripts/in_dir.py {tox_root} pytest -ra -s {posargs}

[testenv:test-notebooks-py{38,39,310,311}-torch{20,21,22}]
change_dir = {env_tmp_dir}
commands_pre =
  torch20: cp {tox_root}/.poetry-lockfiles/lock-torch20.lock ./poetry.lock
  torch20: cp {tox_root}/.poetry-lockfiles/lock-torch20.toml ./pyproject.toml
  torch21: cp {tox_root}/.poetry-lockfiles/lock-torch21.lock ./poetry.lock
  torch21: cp {tox_root}/.poetry-lockfiles/lock-torch21.toml ./pyproject.toml
  torch22: cp {tox_root}/.poetry-lockfiles/lock-torch22.lock ./poetry.lock
  torch22: cp {tox_root}/.poetry-lockfiles/lock-torch22.toml ./pyproject.toml
  poetry install --all-extras --sync --only main,torch,testenv-test,testenv-test-notebooks --no-root
  python {tox_root}/scripts/in_dir.py {tox_root} poetry --all-extras install --only-root
commands =
  python {tox_root}/scripts/in_dir.py {tox_root} pytest --nbmake demos -ra {posargs}

[testenv:test-coverage]
commands_pre = poetry install --all-extras --sync --only main,torch,testenv-test,testenv-test-coverage
commands =
  pytest --cov=graphpatch --cov-report=xml:coverage.xml {posargs}

[testenv:docs]
commands_pre = poetry install --all-extras --sync --only dev,torch,testenv-docs
commands =
  sphinx-autobuild -a docs docs/_build/html -E --watch graphpatch {posargs}
