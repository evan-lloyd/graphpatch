[tox]
isolated_build = true
env_list = 
  test-short-py312-torch25-extraall
labels =
  lock = lock-torch{20,21,22,23,24,25}
  update = update-torch{20,21,22,23,24,25}  
  test-short = test-short-py{38,39,310,311,312}-torch{20,21,22,23,24,25}-extra{none,all}
  test-long = test-long-py{38,39,310,311,312}-torch{20,21,22,23,24,25}-extraall
  test-notebooks = test-notebooks-py{38,39,310,311,312}-torch{20,21,22,23,24,25}
  test-20 = test-short-py310-torch20-extraall
  test-21 = test-short-py310-torch21-extraall
  test-22 = test-short-py310-torch22-extraall
  test-23 = test-short-py310-torch23-extraall
  test-24 = test-short-py310-torch24-extraall
  test-25 = test-short-py310-torch25-extraall
  test-one = test-short-py310-torch25-extraall
  test-long-one = test-long-py310-torch25-extraall
  test-notebooks-one = test-notebooks-py310-torch25
  test-all = test-{short,long}-py{38,39,310,311,312}-torch{20,21,22,23,24,25}-extra{none,all}, test-notebooks-py{38,39,310,311}-torch{20,21,22,23,24,25}
  debug-20 = debug-py310-torch20-extraall
  debug-21 = debug-py310-torch21-extraall
  debug-22 = debug-py310-torch22-extraall
  debug-23 = debug-py310-torch23-extraall
  debug-24 = debug-py310-torch24-extraall
  debug-25 = debug-py310-torch25-extraall

[testenv]
runner = uv-venv-lock-runner
allowlist_externals =
  python
  cp
  echo
pass_env =
  GP_LONG_TESTS
  GP_MODEL_DIR
  GP_PYTEST_N
uv_sync_flags =
  extraall: --all-extras
  # Remove default, unless we actually want it!
  !torch25: --no-group
  !torch25: torch25
set_env =
  GP_TOX_FACTOR_TORCH = {[factor]torch}
  GP_TOX_FACTOR_EXTRA = {[factor]extra}
  GP_TOX_FACTOR_PY = {[factor]py}
  long: GP_LONG_TESTS = 1

[factor]
# Make factors' actual values available for string substitution
torch =
  torch20: torch20
  torch21: torch21
  torch22: torch22
  torch23: torch23
  torch24: torch24
  torch25: torch25
extra =
  extranone: extranone
  extraall: extraall
py =
  py38: py38
  py39: py39
  py310: py310
  py311: py311
  py312: py312


[testenv:test-{short,long}-py{38,39,310,311,312}-torch{20,21,22,23,24,25}-extra{none,all}]
change_dir = {env_tmp_dir}
dependency_groups =
  testenv-test,{[factor]torch}
commands =
   python {tox_root}/scripts/in_dir.py {tox_root} pytest -ra -n {env:GP_PYTEST_N:4} {posargs}

[testenv:lint]
dependency_groups =
  testenv-lint
commands =
  flake8 graphpatch demos tests

[testenv:format]
dependency_groups =
  testenv-format
commands =
  isort graphpatch demos tests
  black --config .black graphpatch demos tests

[testenv:typecheck]
dependency_groups =
  testenv-typecheck
commands =
  mypy graphpatch demos

[testenv:test-{short,long}-py311-torch20-extra{none,all}]
commands =
  echo "Skipping {envname}, python 3.11 incompatible with compile() in torch 2.0.*"

; [testenv:test-{short,long}-py312-torch{20,21,22,23}-extra{none,all}-test{no,yes}]
; change_dir = {env_tmp_dir}
; remove_factor_from_env =
;   short
;   long
;   testno
;   testyes
; commands =
;   echo "Skipping {envname}, python 3.12 incompatible with compile() in torch < 2.4"
; runner = ignore_env_name_mismatch

; [testenv:test-{short,long}-py38-torch25-extra{none,all}-test{no,yes}]
; change_dir = {env_tmp_dir}
; remove_factor_from_env =
;   short
;   long
;   testno
;   testyes
; commands =
;   echo "Skipping {envname}, python 3.8 support dropped in torch >= 2.5"
; runner = ignore_env_name_mismatch

; [testenv:test-{short,long}-py{38,39,310,311,312}-torch{20,21,22,23,24,25}-extra{none,all}-test{no,yes}]
; change_dir = {env_tmp_dir}
; # This is a custom config added for graphpatch. See toxfile.py.
; remove_factor_from_env =
;   short
;   long
;   testno
;   testyes
; set_env =
;   GRAPHPATCH_DEP_GROUPS = main,torch,testenv-test
;   long: GP_LONG_TESTS = 1
; commands = 
;   {[common]set_up_lockfiles}
;   {[common]poetry_install}
;   short: python {tox_root}/scripts/in_dir.py {tox_root} pytest -ra -n 4 {posargs}
;   long-extraall: python {tox_root}/scripts/in_dir.py {tox_root} pytest tests/test_real_models.py -ra {posargs:-k "'test_llama or test_gpt2'"}
; runner = ignore_env_name_mismatch

[testenv:debug-py{38,39,310,311,312}-torch{20,21,22,23,24,25}-extra{none,all}]
change_dir = {env_tmp_dir}
set_env =
  GRAPHPATCH_DEP_GROUPS = main,torch,testenv-test,testenv-debug
commands_pre =
  {[common]set_up_lockfiles}
  {[common]poetry_install}
commands =
  python {tox_root}/scripts/in_dir.py {tox_root} pytest -ra -s {posargs}

[testenv:test-notebooks-py{38,39,310,311,312}-torch{20,21,22,23,24,25}]
change_dir = {env_tmp_dir}
commands_pre =
  {[common]set_up_lockfiles}
  poetry install --all-extras --sync --only main,torch,testenv-test,testenv-test-notebooks --no-root
  python {tox_root}/scripts/in_dir.py {tox_root} poetry --all-extras install --only-root
commands =
  python {tox_root}/scripts/in_dir.py {tox_root} pytest --nbmake demos -ra {posargs}

[testenv:test-coverage]
commands_pre = poetry install --all-extras --sync --only main,torch,testenv-test,testenv-test-coverage
commands =
  pytest --cov=graphpatch --cov-report=xml:coverage.xml {posargs}

[testenv:docs-{full,readme}]
commands_pre = poetry install --all-extras --sync --only dev,torch,testenv-docs
commands =
  # full,readme: python {tox_root}/scripts/export_extras_versions.py docs/extras_versions.rst
  full: sphinx-autobuild -a docs docs/_build/html -E --watch graphpatch {posargs}
  readme: sphinx-build -M markdown docs docs/_build {posargs}
  readme: cp docs/_build/markdown/index.md README.md
