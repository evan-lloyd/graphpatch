#:schema https://json.schemastore.org/pyproject.json
# Do *not* edit pyproject.toml directly; it gets generated by tox -m lock. This is a hack to let us
# specify different versions of torch in various tox environments. Any changes should be added to
# .poetry-lockfiles/pyproject.in, and then you should re-run tox -m lock.

[tool.poetry]
name = "graphpatch"
version = "0.2.3"
description = "graphpatch is a library for activation patching on PyTorch neural network models."
authors = ["Evan Lloyd <evan.t.lloyd@gmail.com>"]
classifiers = ["Development Status :: 4 - Beta"]
documentation = "https://graphpatch.readthedocs.io/en/latest/index.html"
homepage = "https://www.graphpatch.dev"
license = "MIT"
packages = [{ include = "graphpatch" }]
readme = "README.md"
keywords = [
    "mechanistic interpretability",
    "interpretability",
    "pytorch",
    "torch",
    "activation patch",
    "ablation",
    "transformer",
    "large language model",
    "llm",
]
repository = "https://github.com/evan-lloyd/graphpatch"


[tool.poetry.dependencies]
# Due to beta-ness of torch.compile(), minor releases demonstrably break our code, so for now cap
# to tested versions but optimistically allow patch releases (which so far have been non-breaking).
torch = [
    # Need at least torch 2.4 for Python 3.12 support
    { python = ">=3.12", version = ">=2.4,<2.6" },
    # Need at least torch 2.1 for Python 3.11 support
    { python = ">=3.11,<3.12", version = ">=2.1,<2.6" },
    { python = ">=3.9,<3.11", version = ">=2.0,<2.6" },
    # Python 3.8 support dropped in torch 2.5
    { python = ">=3.8,<3.9", version = ">=2.0,<2.5"}
]
# torch does not list numpy as a mandatory requirement, but it is in fact required for certain
# codepaths encountered during compile(). NB: we have separate requirements by Python version
# because otherwise poetry will resolve to a version compatible with *all* Python versions supported
# by graphpatch, which prevents us from running the latest numpy in dev. Note that these do not
# actually add additional constraints on end users, as they exactly reflect the versions at which
# the published packages dropped support for each Python minor version.
numpy = [
    # Python 3.8 support dropped in 1.25
    { python = "<3.9", version = ">=1.17,<1.25" },
    # 3.9 support dropped in 2.1
    { python = ">=3.9,<3.10", version = ">=1.17,<2.1" },
    { python = ">=3.10", version = ">=1.17" },
]
# torch.compile(): 3.8-3.12
python = ">=3.8.1, <3.13"
accelerate = { version = ">=0.15.0", optional = true }
# slightly bumped from transformers setup.py (we don't depend on it directly), which had >=0.1.91
# (0.1.92 was yanked and there was never a 0.1.93); I couldn't get 0.1.91 to build so couldn't
# verify it worked. It's optional, technically, but needed for Llama.
sentencepiece = { version = ">=0.1.94", optional = true }
# Somewhat arbitrary, but this is the first version with Llama, which we use in tests
transformers = { version = ">=4.28.0", optional = true }
bitsandbytes = { version = ">=0.35.4", optional = true, markers = "sys_platform != 'darwin'" }
transformer-lens = { version = ">=1.16.0", optional = true }

[tool.poetry.extras]
transformers = ["transformers", "sentencepiece", "accelerate", "bitsandbytes"]
transformer-lens = ["transformer-lens"]

[tool.poetry.group.dev.dependencies]
ipykernel = "^6.25.2"
tuna = "^0.5.11"
jupyterlab = "^4.0.7"
ipywidgets = "^8.1.1"
tox = "^4.11.3"
sphobjinv = "^2.3.1"

[tool.poetry.group.testenv-lint.dependencies]
flake8 = "^6.1.0"

[tool.poetry.group.testenv-format.dependencies]
black = { extras = ["jupyter"], version = "^23.10.1" }
isort = "^5.12.0"

[tool.poetry.group.testenv-typecheck.dependencies]
mypy = "^1.6.1"

[tool.poetry.group.testenv-test.dependencies]
pytest = "^7.4.2"
pytest-mock = "^3.12.0"
syrupy = "^4.6.4"
ipython = "^8.12.3"
pdbpp = "^0.10.3"
pytest-xdist = "^3.5.0"
pytest-env = "^1.1.3"
# For numpy 2.0 support in dev, we also need to separate out pandas by python version; if we don't
# do this, poetry pins pandas to the latest version that supported 3.8, which was compiled with
# numpy 1.x.
pandas = [
    # Python 3.8 dropped in 2.1.0
    { python = "<3.9", version = "<2.1.0", optional = true },
    { python = ">=3.9", version = "*", optional = true },
]

[tool.poetry.group.testenv-debug]
optional = true

[tool.poetry.group.testenv-debug.dependencies]
# Useful for debugging pickling errors; see https://pygobject.gnome.org/getting_started.html
# to set up interactive viewing of objgraph for your OS (needs GTK 3 bindings).
# eg, MacOS: brew install pygobject3 gtk+3 graphviz
xdot = "^1.3"
graphviz = "^0.20.3"
objgraph = "^3.6.1"

[tool.poetry.group.testenv-test-notebooks.dependencies]
nbmake = "^1.4.6"

[tool.poetry.group.testenv-test-coverage.dependencies]
pytest-cov = "^4.1.0"

[tool.poetry.group.testenv-docs.dependencies]
python = ">=3.10, <3.11"
sphinx = { version = "^7.2.6", markers = "python_version >= '3.9'" }
furo = "^2023.9.10"
sphinx-autobuild = "^2021.3.14"
docutils = { version = "^0.21.2", markers = "python_version >= '3.9'" }
sphinx-markdown-builder = "^0.6.6"
# https://github.com/python-poetry/poetry-plugin-export/issues/183 ðŸ™ƒ
fsspec = "<=2024.6.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
[tool.poetry.group.torch.dependencies]
torch = [
    { platform = "darwin", url = "https://download.pytorch.org/whl/cpu/torch-2.5.0-cp312-none-macosx_11_0_arm64.whl", python = ">=3.12,<3.13" },
    { platform = "darwin", url = "https://download.pytorch.org/whl/cpu/torch-2.5.0-cp311-none-macosx_11_0_arm64.whl", python = ">=3.11,<3.12" },
    { platform = "darwin", url = "https://download.pytorch.org/whl/cpu/torch-2.5.0-cp310-none-macosx_11_0_arm64.whl", python = ">=3.10,<3.11"},
    { platform = "darwin", url = "https://download.pytorch.org/whl/cpu/torch-2.5.0-cp39-none-macosx_11_0_arm64.whl", python = ">=3.9,<3.10"},
    { platform = "linux", url = "https://download.pytorch.org/whl/cu118/torch-2.5.0%2Bcu118-cp312-cp312-linux_x86_64.whl", python = ">=3.12,<3.13"},
    { platform = "linux", url = "https://download.pytorch.org/whl/cu118/torch-2.5.0%2Bcu118-cp311-cp311-linux_x86_64.whl", python = ">=3.11,<3.12"},
    { platform = "linux", url = "https://download.pytorch.org/whl/cu118/torch-2.5.0%2Bcu118-cp310-cp310-linux_x86_64.whl", python = ">=3.10,<3.11"},
    { platform = "linux", url = "https://download.pytorch.org/whl/cu118/torch-2.5.0%2Bcu118-cp39-cp39-linux_x86_64.whl", python = ">=3.9,<3.10"},
]
